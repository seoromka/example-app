#!groovy
// Run docker build
properties([disableConcurrentBuilds()])

pipeline {
    def scmVars = checkout([
        $class: 'GitSCM'
    ])
    agent {
        label 'master'
    }
    triggers { pollSCM('* * * * *') }
    options {
        buildDiscarder(logRotator(numToKeepStr: '10', artifactNumToKeepStr: '10'))
        timestamps()
    }
    stages {
        stage("docker login") {
            steps {
                echo " ============== docker login =================="
                withCredentials([usernamePassword(credentialsId: 'dockerhub_kostin', usernameVariable: 'USERNAME', passwordVariable: 'PASSWORD')]) {
                    sh """
                    docker login -u $USERNAME -p $PASSWORD
                    """
                }
            }
        }
        stage("create docker image") {
            steps {
                echo " ============== start building image =================="
                sh 'echo $BRANCH_NAME' 
                sh "echo $BRANCH_NAME"
                sh "echo ${env.BRANCH_NAME}"
                echo 'test'
                echo "scmVars.GIT_COMMIT"
                echo "${scmVars.GIT_COMMIT}"
                
                dir ('_docker') {
                	sh "docker build -t rkostin/example-app:${env.BRANCH_NAME} . "
                }
            }
        }
        stage("docker push") {
            steps {
                echo " ============== start pushing image =================="
                sh "docker push rkostin/example-app:${env.BRANCH_NAME}"
            }
        }
    }
}
